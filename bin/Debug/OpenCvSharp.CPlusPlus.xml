<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenCvSharp.CPlusPlus</name>
    </assembly>
    <members>
        <member name="T:OpenCvSharp.CPlusPlus.CvCpp">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ToPtr(OpenCvSharp.ICvPtrHolder)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvtColor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.ColorConversion)">
            <summary>
            
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <param name="code"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvtColor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.ColorConversion,System.Int32)">
            <summary>
            
            </summary>
            <param name="src"></param>
            <param name="dst"></param>
            <param name="code"></param>
            <param name="dstCn"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Add(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Computes the per-element sum of two arrays or an array and a scalar.
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Add(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Computes the per-element sum of two arrays or an array and a scalar.
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Add(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Computes the per-element sum of two arrays or an array and a scalar.
            </summary>
            <param name="src1">The first source array</param>
            <param name="sc">Scalar; the second input parameter</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Add(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Computes the per-element sum of two arrays or an array and a scalar.
            </summary>
            <param name="src1">The first source array</param>
            <param name="sc">Scalar; the second input parameter</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Circle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="img">Image where the circle is drawn. </param>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvarrToMat(OpenCvSharp.CvArr)">
            <summary>
            Converts CvMat, IplImage or CvMatND to Mat.
            </summary>
            <param name="arr">The source CvMat, IplImage or CvMatND</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvarrToMat(OpenCvSharp.CvArr,System.Boolean)">
            <summary>
            Converts CvMat, IplImage or CvMatND to Mat.
            </summary>
            <param name="arr">The source CvMat, IplImage or CvMatND</param>
            <param name="copyData">
            When it is false (default value), no data is copied, only the new header is created. 
            In this case the original array should not be deallocated while the new matrix header is used.
            The the parameter is true, all the data is copied, then user may deallocate the original array right after the conversion
            </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvarrToMat(OpenCvSharp.CvArr,System.Boolean,System.Boolean)">
            <summary>
            Converts CvMat, IplImage or CvMatND to Mat.
            </summary>
            <param name="arr">The source CvMat, IplImage or CvMatND</param>
            <param name="copyData">
            When it is false (default value), no data is copied, only the new header is created. 
            In this case the original array should not be deallocated while the new matrix header is used.
            The the parameter is true, all the data is copied, then user may deallocate the original array right after the conversion
            </param>
            <param name="allowND">
            When it is true (default value), then CvMatND is converted to Mat if it’s possible 
            (e.g. then the data is contiguous). If it’s not possible, or when the parameter is false, the function will report an error
            </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.CvarrToMat(OpenCvSharp.CvArr,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Converts CvMat, IplImage or CvMatND to Mat.
            </summary>
            <param name="arr">The source CvMat, IplImage or CvMatND</param>
            <param name="copyData">
            When it is false (default value), no data is copied, only the new header is created. 
            In this case the original array should not be deallocated while the new matrix header is used.
            The the parameter is true, all the data is copied, then user may deallocate the original array right after the conversion
            </param>
            <param name="allowND">
            When it is true (default value), then CvMatND is converted to Mat if it’s possible 
            (e.g. then the data is contiguous). If it’s not possible, or when the parameter is false, the function will report an error
            </param>
            <param name="coiMode">
            The parameter specifies how the IplImage COI (when set) is handled.
            * If coiMode=false, the function will report an error if COI is set.
            * If coiMode=true, the function will never report an error; instead it returns the header to the whole original image 
            and user will have to check and process COI manually, see extractImageCOI.
            </param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary.</param>
            <param name="shift">Number of fractional bits in the center coordinates and axes' values. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Ellipse(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="img">Image. </param>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary</param>
            <param name="shift">Number of fractional bits in the box vertex coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ExtractImageCOI(OpenCvSharp.CvArr,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Extract the selected image channel
            </summary>
            <param name="arr">The source array. It should be a pointer to CvMat or IplImage</param>
            <param name="coiimg">The destination array; will have single-channel, and the same size and the same depth as src</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ExtractImageCOI(OpenCvSharp.CvArr,OpenCvSharp.CPlusPlus.Mat,System.Int32)">
            <summary>
            Extract the selected image channel
            </summary>
            <param name="arr">The source array. It should be a pointer to CvMat or IplImage</param>
            <param name="coiimg">The destination array; will have single-channel, and the same size and the same depth as src</param>
            <param name="coi">If the parameter is &gt;=0, it specifies the channel to extract; 
            If it is &lt;0, src must be a pointer to IplImage with valid COI set - then the selected COI is extracted.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.InsertImageCOI(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvArr)">
            <summary>
            
            </summary>
            <param name="coiimg"></param>
            <param name="arr"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.InsertImageCOI(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvArr,System.Int32)">
            <summary>
            
            </summary>
            <param name="coiimg"></param>
            <param name="arr"></param>
            <param name="coi"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Line(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="img">The image. </param>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Rectangle(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="img">Image. </param>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="src1">The first source array</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="src1">The first source array</param>
            <param name="sc">Scalar; the first or the second input parameter</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="src1">The first source array</param>
            <param name="sc">Scalar; the first or the second input parameter</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="sc">Scalar; the first or the second input parameter</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Subtract(OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Calculates per-element difference between two arrays or array and a scalar
            </summary>
            <param name="sc">Scalar; the first or the second input parameter</param>
            <param name="src2">The second source array. It must have the same size and same type as src1</param>
            <param name="dst">The destination array; it will have the same size and same type as src1; see Mat::create</param>
            <param name="mask">The optional operation mask, 8-bit single channel array; specifies elements of the destination array to be changed</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Multiply(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <param name="dst"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Multiply(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <param name="dst"></param>
            <param name="scale"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Divide(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <param name="dst"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Divide(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            
            </summary>
            <param name="src1"></param>
            <param name="src2"></param>
            <param name="dst"></param>
            <param name="scale"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.Divide(System.Double,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="scale"></param>
            <param name="src"></param>
            <param name="dst"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.NamedWindow(System.String,OpenCvSharp.WindowMode)">
            <summary>
            Creates a window.
            </summary>
            <param name="winname">Name of the window in the window caption that may be used as a window identifier.</param>
            <param name="flags">
            Flags of the window. Currently the only supported flag is CV WINDOW AUTOSIZE. If this is set, 
            the window size is automatically adjusted to fit the displayed image (see imshow ), and the user can not change the window size manually.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImShow(System.String,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Displays the image in the specified window
            </summary>
            <param name="winname">Name of the window.</param>
            <param name="mat">Image to be shown.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImRead(System.String,OpenCvSharp.LoadMode)">
            <summary>
            Loads an image from a file.
            </summary>
            <param name="filename">Name of file to be loaded.</param>
            <param name="flags">Specifies color type of the loaded image</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImWrite(System.String,OpenCvSharp.CPlusPlus.Mat,System.Int32[])">
            <summary>
            Saves an image to a specified file.
            </summary>
            <param name="filename"></param>
            <param name="img"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImWrite(System.String,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.ImageEncodingParam[])">
            <summary>
            Saves an image to a specified file.
            </summary>
            <param name="filename"></param>
            <param name="img"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImDecode(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.LoadMode)">
            <summary>
            Reads image from the specified buffer in memory.
            </summary>
            <param name="buf">The input array of vector of bytes.</param>
            <param name="flags">The same flags as in imread</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImEncode(System.String,OpenCvSharp.CPlusPlus.Mat,System.Byte[]@,System.Int32[])">
            <summary>
            Compresses the image and stores it in the memory buffer
            </summary>
            <param name="ext">The file extension that defines the output format</param>
            <param name="img">The image to be written</param>
            <param name="buf"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.ImEncode(System.String,OpenCvSharp.CPlusPlus.Mat,System.Byte[]@,OpenCvSharp.ImageEncodingParam[])">
            <summary>
            Compresses the image and stores it in the memory buffer
            </summary>
            <param name="ext">The file extension that defines the output format</param>
            <param name="img">The image to be written</param>
            <param name="buf"></param>
            <param name="prms"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.WaitKey">
            <summary>
            Waits for a pressed key.
            </summary>
            <returns>Returns the code of the pressed key or -1 if no key was pressed before the specified time had elapsed.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.WaitKey(System.Int32)">
            <summary>
            Waits for a pressed key.
            </summary>
            <param name="delay">Delay in milliseconds. 0 is the special value that means ”forever”</param>
            <returns>Returns the code of the pressed key or -1 if no key was pressed before the specified time had elapsed.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.FAST(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.KeyPoint[]@,System.Int32)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="keypoints"></param>
            <param name="threshold"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCpp.FAST(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.KeyPoint[]@,System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="keypoints"></param>
            <param name="threshold"></param>
            <param name="nonmax_supression"></param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorKeyPoint">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.IStdVector">
            <summary>
            Represents std::vector 
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.IStdVector.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.IStdVector.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorKeyPoint._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.#ctor(OpenCvSharp.CPlusPlus.KeyPoint[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorKeyPoint.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorPoint">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorPoint._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.#ctor(OpenCvSharp.CvPoint[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorPoint.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorPoint.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorPoint.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StarDetector">
            <summary>
            Star Detector
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
            <param name="lineThresholdProjected"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
            <param name="lineThresholdProjected"></param>
            <param name="lineThresholdBinarized"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="maxSize"></param>
            <param name="responseThreshold"></param>
            <param name="lineThresholdProjected"></param>
            <param name="lineThresholdBinarized"></param>
            <param name="suppressNonmaxSize"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.GetKeyPoints(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Retrieves keypoints using the StarDetector algorithm.
            </summary>
            <param name="image">The input 8-bit grayscale image</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StarDetector.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CvCamShiftTracker">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SizeOf">
            <summary>
            sizeof(CvCamShiftTracker) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CvCamShiftTracker._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetOrientation">
            <summary>
            orientation of the object in degrees
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetLength">
            <summary>
            the larger linear size of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetWidth">
            <summary>
            the smaller linear size of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetCenter">
            <summary>
            center of the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetWindow">
            <summary>
            bounding rectangle for the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetThreshold">
            <summary>
            thresholding value that applied to back project
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetHistDims(System.Int32[])">
            <summary>
            returns number of histogram dimensions and sets
            </summary>
            <param name="dims"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetMinChVal(System.Int32)">
            <summary>
            get the minimum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetMaxChVal(System.Int32)">
            <summary>
            get the maximum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetWindow(OpenCvSharp.CvRect)">
            <summary>
            set initial object rectangle (must be called before initial calculation of the histogram)
            </summary>
            <param name="window"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetThreshold(System.Int32)">
            <summary>
            threshold applied to the histogram bins
            </summary>
            <param name="threshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetHistBinRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="dim"></param>
            <param name="min_val"></param>
            <param name="max_val"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetHistDims(System.Int32,System.Int32[])">
            <summary>
            set the histogram parameters
            </summary>
            <param name="c_dims"></param>
            <param name="dims"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetMinChVal(System.Int32,System.Int32)">
            <summary>
            set the minimum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.SetMaxChVal(System.Int32,System.Int32)">
            <summary>
            set the maximum allowed value of the specified channel
            </summary>
            <param name="channel"></param>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.TrackObject(OpenCvSharp.IplImage)">
            <summary>
            update object position
            </summary>
            <param name="cur_frame"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.UpdateHistogram(OpenCvSharp.IplImage)">
            <summary>
            update object histogram
            </summary>
            <param name="cur_frame"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.ResetHistogram">
            <summary>
            reset histogram
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.GetBackProject">
            <summary>
            get back project image
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvCamShiftTracker.Query(System.Int32[])">
            <summary>
            
            </summary>
            <param name="bin"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorFloat">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorFloat._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.#ctor(System.Single[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorFloat.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorFloat.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorFloat.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.Mat">
            <summary>
            OpenCV C++ matrix class.
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.MAGIC_VAL">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.AUTO_STEP">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.CONTINUOUS_FLAG">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a circle
            </summary>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="center_x">X-coordinate of the center of the circle. </param>
            <param name="center_y">Y-coordinate of the center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws a circle
            </summary>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a circle
            </summary>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Circle(OpenCvSharp.CvPoint,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a circle
            </summary>
            <param name="center">Center of the circle. </param>
            <param name="radius">Radius of the circle. </param>
            <param name="color">Circle color. </param>
            <param name="thickness">Thickness of the circle outline if positive, otherwise indicates that a filled circle has to be drawn. </param>
            <param name="line_type">Type of the circle boundary.</param>
            <param name="shift">Number of fractional bits in the center coordinates and radius value. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvPoint,OpenCvSharp.CvSize,System.Double,System.Double,System.Double,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="center">Center of the ellipse. </param>
            <param name="axes">Length of the ellipse axes. </param>
            <param name="angle">Rotation angle. </param>
            <param name="start_angle">Starting angle of the elliptic arc. </param>
            <param name="end_angle">Ending angle of the elliptic arc. </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse arc. </param>
            <param name="line_type">Type of the ellipse boundary.</param>
            <param name="shift">Number of fractional bits in the center coordinates and axes' values. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ellipse(OpenCvSharp.CvBox2D,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple or thick elliptic arc or fills ellipse sector
            </summary>
            <param name="box">The enclosing box of the ellipse drawn </param>
            <param name="color">Ellipse color. </param>
            <param name="thickness">Thickness of the ellipse boundary. </param>
            <param name="line_type">Type of the ellipse boundary</param>
            <param name="shift">Number of fractional bits in the box vertex coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1_x">First point's x-coordinate of the line segment. </param>
            <param name="pt1_y">First point's y-coordinate of the line segment. </param>
            <param name="pt2_x">Second point's x-coordinate of the line segment. </param>
            <param name="pt2_y">Second point's y-coordinate of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Line(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws a line segment connecting two points
            </summary>
            <param name="pt1">First point of the line segment. </param>
            <param name="pt2">Second point of the line segment. </param>
            <param name="color">Line color. </param>
            <param name="thickness">Line thickness. </param>
            <param name="line_type">Type of the line.</param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(System.Int32,System.Int32,System.Int32,System.Int32,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1_x">X-coordinate of the one of the rectangle vertices. </param>
            <param name="pt1_y">Y-coordinate of the one of the rectangle vertices. </param>
            <param name="pt2_x">X-coordinate of the opposite rectangle vertex. </param>
            <param name="pt2_y">Y-coordinate of the opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvPoint,OpenCvSharp.CvPoint,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="pt1">One of the rectangle vertices. </param>
            <param name="pt2">Opposite rectangle vertex. </param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvRect,OpenCvSharp.CvScalar)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Rectangle(OpenCvSharp.CvRect,OpenCvSharp.CvScalar,System.Int32,OpenCvSharp.LineType,System.Int32)">
            <summary>
            Draws simple, thick or filled rectangle
            </summary>
            <param name="rect">Rectangle.</param>
            <param name="color">Line color (RGB) or brightness (grayscale image). </param>
            <param name="thickness">Thickness of lines that make up the rectangle. Negative values, e.g. CV_FILLED, make the function to draw a filled rectangle. </param>
            <param name="line_type">Type of the line, see cvLine description. </param>
            <param name="shift">Number of fractional bits in the point coordinates. </param>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat.SizeOf">
            <summary>
            sizeof(CvBlobs)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.Mat._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#cctor">
            <summary>
            static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.String,OpenCvSharp.LoadMode)">
            <summary>
            Loads image from the specified file name using cv::imread
            </summary>
            <param name="filename"></param>
            <param name="flags"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType,OpenCvSharp.CvScalar)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <param name="s"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvSize,OpenCvSharp.MatrixType,OpenCvSharp.CvScalar)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <param name="s"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Int32,System.Int32,OpenCvSharp.MatrixType,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="step"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvSize,OpenCvSharp.MatrixType,System.IntPtr,System.UInt32)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <param name="data"></param>
            <param name="step"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSlice,OpenCvSharp.CvSlice)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="rowRange"></param>
            <param name="colRange"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvRect)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="roi"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvMat)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.CvMat,System.Boolean)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="copyData"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.IplImage)">
            <summary>
            
            </summary>
            <param name="img"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(OpenCvSharp.IplImage,System.Boolean)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="copyData"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.#ctor(System.Array,OpenCvSharp.BitDepth,System.Boolean)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <param name="depth"></param>
            <param name="copyData"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Release">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Explicit(OpenCvSharp.CPlusPlus.Mat)~OpenCvSharp.CvMat">
            <summary>
            
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.op_Explicit(OpenCvSharp.CPlusPlus.Mat)~OpenCvSharp.IplImage">
            <summary>
            
            </summary>
            <param name="self"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Diag(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            constructs a square diagonal matrix which main diagonal is vector "d"
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Zeros(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Zeros(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ones(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Ones(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Eye(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Eye(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            Matlab-style matrix initialization
            </summary>
            <param name="size"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Row(System.Int32)">
            <summary>
            returns a new matrix header for the specified row
            </summary>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Col(System.Int32)">
            <summary>
            returns a new matrix header for the specified column
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.RowRange(System.Int32,System.Int32)">
            <summary>
            returns a new matrix header for the specified row span
            </summary>
            <param name="startrow"></param>
            <param name="endrow"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.RowRange(OpenCvSharp.CvSlice)">
            <summary>
            returns a new matrix header for the specified row span
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ColRange(System.Int32,System.Int32)">
            <summary>
            returns a new matrix header for the specified column span
            </summary>
            <param name="startcol"></param>
            <param name="endcol"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ColRange(OpenCvSharp.CvSlice)">
            <summary>
            returns a new matrix header for the specified column span
            </summary>
            <param name="r"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Diag">
            <summary>
            returns a new matrix header for the specified diagonal
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Diag(OpenCvSharp.CPlusPlus.MatDiagType)">
            <summary>
            returns a new matrix header for the specified diagonal
            </summary>
            <param name="d"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Clone">
            <summary>
            returns deep copy of the matrix, i.e. the data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.CopyTo(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            copies the matrix content to "m".
            It calls m.create(this->size(), this->type()).
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.CopyTo(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            copies those matrix elements to "m" that are marked with non-zero mask elements.
            </summary>
            <param name="m"></param>
            <param name="mask"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ConvertTo(OpenCvSharp.MatrixType)">
            <summary>
            converts matrix to another datatype with optional scalng. See cvConvertScale.
            </summary>
            <param name="rtype"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ConvertTo(OpenCvSharp.MatrixType,System.Double)">
            <summary>
            converts matrix to another datatype with optional scalng. See cvConvertScale.
            </summary>
            <param name="rtype"></param>
            <param name="alpha"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ConvertTo(OpenCvSharp.MatrixType,System.Double,System.Double)">
            <summary>
            converts matrix to another datatype with optional scalng. See cvConvertScale.
            </summary>
            <param name="rtype"></param>
            <param name="alpha"></param>
            <param name="beta"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.AssignTo(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.AssignTo(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.MatrixType)">
            <summary>
            
            </summary>
            <param name="m"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.SetTo(OpenCvSharp.CvScalar,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            sets some of the matrix elements to s, according to the mask
            </summary>
            <param name="s"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Reshape(System.Int32,System.Int32)">
            <summary>
            creates alternative matrix header for the same data, with different
            number of channels and/or different number of rows. see cvReshape.
            </summary>
            <param name="cn"></param>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Cross(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            computes cross-product of 2 3D vectors
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Dot(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            computes dot-product
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Create(System.Int32,System.Int32,OpenCvSharp.MatrixType)">
            <summary>
            allocates new matrix data unless the matrix already has specified size and type.
            previous data is unreferenced if needed.
            </summary>
            <param name="rows"></param>
            <param name="cols"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Create(OpenCvSharp.CvSize,OpenCvSharp.MatrixType)">
            <summary>
            allocates new matrix data unless the matrix already has specified size and type.
            previous data is unreferenced if needed.
            </summary>
            <param name="size"></param>
            <param name="type"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.LocateROI(OpenCvSharp.CvSize@,OpenCvSharp.CvPoint@)">
            <summary>
            locates matrix header within a parent matrix.
            </summary>
            <param name="wholeSize"></param>
            <param name="ofs"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToCvMat">
            <summary>
            converts header to CvMat; no data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToIplImage">
            <summary>
            converts header to IplImage; no data is copied
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.IsContinuous">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.At``1(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.At``1(OpenCvSharp.CvPoint)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="pt"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Get``1(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.Set``1(System.Int32,System.Int32,``0)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="y"></param>
            <param name="x"></param>
            <param name="value"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToBitmap">
            <summary>
            Converts Mat to System.Drawing.Bitmap
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToBitmap(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Converts Mat to System.Drawing.Bitmap
            </summary>
            <param name="pf">Pixel Depth</param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.Mat.ToBitmap(System.Drawing.Bitmap)">
            <summary>
            Converts Mat to System.Drawing.Bitmap
            </summary>
            <param name="dst">Bitmap</param>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Flags">
            <summary>
            includes several bit-fields: 
             1.the magic signature 
             2.continuity flag 
             3.depth 
             4.number of channels
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Rows">
            <summary>
            the number of rows
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Cols">
            <summary>
            the number of columns
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Step">
            <summary>
            a distance between successive rows in bytes; includes the gap if any
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Data">
            <summary>
            pointer to the data
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.RefCount">
            <summary>
            pointer to the reference counter;
            when matrix points to user-allocated data, the pointer is NULL
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.DataStart">
            <summary>
            helper fields used in locateROI and adjustROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.DataEnd">
            <summary>
            helper fields used in locateROI and adjustROI
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.ElemSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.ElemSize1">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Depth">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Channels">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Bpp">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Size">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.Mat.Item(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MSER">
            <summary>
            Maximally-Stable Extremal Region Extractor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor">
            <summary>
            Creates MSER parameters
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
            <param name="area_threshold">the area threshold to cause re-initialize</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double,System.Double)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
            <param name="area_threshold">the area threshold to cause re-initialize</param>
            <param name="min_margin">ignore too small margin</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Creates MSER parameters
            </summary>
            <param name="delta">delta, in the code, it compares (size_{i}-size_{i-delta})/size_{i-delta}</param>
            <param name="min_area">prune the area which smaller than min_area</param>
            <param name="max_area">prune the area which bigger than max_area</param>
            <param name="max_variation">prune the area have simliar size to its children</param>
            <param name="min_diversity">trace back to cut off mser with diversity &lt; min_diversity</param>
            <param name="max_evolution">for color image, the evolution steps</param>
            <param name="area_threshold">the area threshold to cause re-initialize</param>
            <param name="min_margin">ignore too small margin</param>
            <param name="edge_blur_size">the aperture size for edge blur</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            Extracts the contours of Maximally Stable Extremal Regions
            </summary>
            <param name="image"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.MSER.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.HOGDescriptor">
            <summary>
            HOG (Histogram-of-Oriented-Gradients) Descriptor and Object Detector
            /// </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.L2Hys">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.SizeOf">
            <summary>
            sizeof(HOGDescriptor) 
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor.DefaultPeopleDetector">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HOGDescriptor._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType,System.Double)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
            <param name="L2HysThreshold"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Int32,System.Int32,System.Double,OpenCvSharp.CPlusPlus.HistogramNormType,System.Double,System.Boolean)">
            <summary>
            
            </summary>
            <param name="winSize"></param>
            <param name="blockSize"></param>
            <param name="blockStride"></param>
            <param name="cellSize"></param>
            <param name="nbins"></param>
            <param name="derivAperture"></param>
            <param name="winSigma"></param>
            <param name="histogramNormType"></param>
            <param name="L2HysThreshold"></param>
            <param name="gammaCorrection"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.#ctor(System.IntPtr)">
            <summary>
            Initializes from pointer
            </summary>
            <param name="ptr">class HOGDescriptor*</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.GetDefaultPeopleDetector">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.SetSVMDetector(System.Single[])">
            <summary>
            
            </summary>
            <param name="svmdetector"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Load(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Load(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="objname"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Save(System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Save(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="objname"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.GetDescriptorSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.CheckDetectorSize">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.GetWinSigma">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="winStride"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Compute(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvPoint[])">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="locations"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.Detect(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize,OpenCvSharp.CvPoint[])">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="searchLocations"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Double)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="scale"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.DetectMultiScale(OpenCvSharp.CPlusPlus.Mat,System.Double,OpenCvSharp.CvSize,OpenCvSharp.CvSize,System.Double,System.Int32)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="hitThreshold"></param>
            <param name="winStride"></param>
            <param name="padding"></param>
            <param name="scale"></param>
            <param name="groupThreshold"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.ComputeGradient(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="grad"></param>
            <param name="angleOfs"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.ComputeGradient(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="grad"></param>
            <param name="angleOfs"></param>
            <param name="paddingTL"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.HOGDescriptor.ComputeGradient(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CvSize,OpenCvSharp.CvSize)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="grad"></param>
            <param name="angleOfs"></param>
            <param name="paddingTL"></param>
            <param name="paddingBR"></param>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.WinSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.BlockSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.BlockStride">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.CellSize">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.Nbins">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.DerivAperture">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.WinSigma">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.HistogramNormType">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.L2HysThreshold">
            <summary>
            
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.HOGDescriptor.GammaCorrection">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.HistogramNormType">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.HistogramNormType.L2Hys">
            <summary>
            
            [HOGDescriptor::L2Hys]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CppInvoke">
            <summary>
            P/Invoke methods of OpenCV C++ interface
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CppInvoke.DllExtern">
            <summary>
            DLL file name
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CppInvoke.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CppInvoke.TryPInvoke">
            <summary>
            Checks whether PInvoke functions can be called
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MorphingMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.None">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_NONE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.Erode">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_ERODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.ErodeErode">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_ERODE_ERODE]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MorphingMethod.ErodeDilate">
            <summary>
            
            [CvAdaptiveSkinDetector::MORPHING_METHOD_ERODE_DILATE]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="samplingDivider"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.#ctor(System.Int32,OpenCvSharp.CPlusPlus.MorphingMethod)">
            <summary>
            
            </summary>
            <param name="samplingDivider"></param>
            <param name="morphingMethod"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.CvAdaptiveSkinDetector.Process(OpenCvSharp.IplImage,OpenCvSharp.IplImage)">
            <summary>
            
            </summary>
            <param name="inputBGRImage"></param>
            <param name="outputHueMask"></param>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorRect">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorRect._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.#ctor(OpenCvSharp.CvRect[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorRect.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorRect.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorRect.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.StdVectorByte">
            <summary>
            
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.StdVectorByte._disposed">
            <summary>
            Track whether Dispose has been called
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.#ctor(System.Byte[])">
            <summary>
            
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly or indirectly by a user's code. Managed and unmanaged resources can be disposed.
            If false, the method has been called by the runtime from inside the finalizer and you should not reference other objects. Only unmanaged resources can be disposed.
            </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.StdVectorByte.ToArray">
            <summary>
            Converts std::vector to managed array
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorByte.Size">
            <summary>
            vector.size()
            </summary>
        </member>
        <member name="P:OpenCvSharp.CPlusPlus.StdVectorByte.ElemPtr">
            <summary>
            &amp;vector[0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.MatDiagType">
            <summary>
            diagonal type
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatDiagType.Upper">
            <summary>
            a diagonal from the upper half
            [[&lt; 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatDiagType.Main">
            <summary>
            Main dialonal
            [= 0]
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.MatDiagType.Lower">
            <summary>
            a diagonal from the lower half
            [&gt; 0]
            </summary>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.KeyPoint">
            <summary>
            Data structure for salient point detectors
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Pt">
            <summary>
            Coordinate of the point
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Size">
            <summary>
            Feature size
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Angle">
            <summary>
            Feature orientation in degrees (has negative value if the orientation is not defined/not computed)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Response">
            <summary>
            Feature strength (can be used to select only the most prominent key points)
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.Octave">
            <summary>
            Scale-space octave in which the feature has been found; may correlate with the size
            </summary>
        </member>
        <member name="F:OpenCvSharp.CPlusPlus.KeyPoint.ClassID">
            <summary>
            Point class (can be used by feature classifiers or object detectors)
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(OpenCvSharp.CvPoint2D32f,System.Single)">
            <summary>
            Complete constructor
            </summary>
            <param name="pt">Coordinate of the point</param>
            <param name="size">Feature size</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(OpenCvSharp.CvPoint2D32f,System.Single,System.Single)">
            <summary>
            Complete constructor
            </summary>
            <param name="pt">Coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(OpenCvSharp.CvPoint2D32f,System.Single,System.Single,System.Single)">
            <summary>
            Complete constructor
            </summary>
            <param name="pt">Coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(OpenCvSharp.CvPoint2D32f,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Complete constructor
            </summary>
            <param name="pt">Coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
            <param name="octave">Scale-space octave in which the feature has been found; may correlate with the size</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(OpenCvSharp.CvPoint2D32f,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Complete constructor
            </summary>
            <param name="pt">Coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
            <param name="octave">Scale-space octave in which the feature has been found; may correlate with the size</param>
            <param name="class_id">Point class (can be used by feature classifiers or object detectors)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Complete constructor
            </summary>
            <param name="x">X-coordinate of the point</param>
            <param name="y">Y-coordinate of the point</param>
            <param name="size">Feature size</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Complete constructor
            </summary>
            <param name="x">X-coordinate of the point</param>
            <param name="y">Y-coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Complete constructor
            </summary>
            <param name="x">X-coordinate of the point</param>
            <param name="y">Y-coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Complete constructor
            </summary>
            <param name="x">X-coordinate of the point</param>
            <param name="y">Y-coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
            <param name="octave">Scale-space octave in which the feature has been found; may correlate with the size</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Complete constructor
            </summary>
            <param name="x">X-coordinate of the point</param>
            <param name="y">Y-coordinate of the point</param>
            <param name="size">Feature size</param>
            <param name="angle">Feature orientation in degrees (has negative value if the orientation is not defined/not computed)</param>
            <param name="response">Feature strength (can be used to select only the most prominent key points)</param>
            <param name="octave">Scale-space octave in which the feature has been found; may correlate with the size</param>
            <param name="class_id">Point class (can be used by feature classifiers or object detectors)</param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.Equals(OpenCvSharp.CPlusPlus.KeyPoint)">
            <summary>
            Specifies whether this object contains the same members as the specified Object.
            </summary>
            <param name="obj">The Object to test.</param>
            <returns>This method returns true if obj is the same type as this object and has the same members as this object.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.op_Equality(OpenCvSharp.CPlusPlus.KeyPoint,OpenCvSharp.CPlusPlus.KeyPoint)">
            <summary>
            Compares two CvPoint objects. The result specifies whether the members of each object are equal.
            </summary>
            <param name="lhs">A Point to compare.</param>
            <param name="rhs">A Point to compare.</param>
            <returns>This operator returns true if the members of left and right are equal; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.op_Inequality(OpenCvSharp.CPlusPlus.KeyPoint,OpenCvSharp.CPlusPlus.KeyPoint)">
            <summary>
            Compares two CvPoint objects. The result specifies whether the members of each object are unequal.
            </summary>
            <param name="lhs">A Point to compare.</param>
            <param name="rhs">A Point to compare.</param>
            <returns>This operator returns true if the members of left and right are unequal; otherwise, false.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.Equals(System.Object)">
            <summary>
            Specifies whether this object contains the same members as the specified Object.
            </summary>
            <param name="obj">The Object to test.</param>
            <returns>This method returns true if obj is the same type as this object and has the same members as this object.</returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.KeyPoint.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>An integer value that specifies a hash value for this object.</returns>
        </member>
        <member name="T:OpenCvSharp.CPlusPlus.SURF">
            <summary>
            Various SURF algorithm parameters
            </summary>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.#ctor(System.Double,System.Boolean)">
            <summary>
            Creates SURF default parameters
            </summary>
            <param name="hessianThreshold">Only features with keypoint.hessian larger than that are extracted. </param>
            <param name="extended">false means basic descriptors (64 elements each), true means _extended descriptors (128 elements each) </param>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="mask"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Extract(OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.Mat,OpenCvSharp.CPlusPlus.KeyPoint[],System.Single[]@,System.Boolean)">
            <summary>
            
            </summary>
            <param name="img"></param>
            <param name="mask"></param>
            <param name="keypoints"></param>
            <param name="descriptors"></param>
            <param name="useProvidedKeypoints"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.GetPointOctave(OpenCvSharp.CvSURFPoint,OpenCvSharp.CvSURFParams)">
            <summary>
            
            </summary>
            <param name="kpt"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:OpenCvSharp.CPlusPlus.SURF.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
    </members>
</doc>
